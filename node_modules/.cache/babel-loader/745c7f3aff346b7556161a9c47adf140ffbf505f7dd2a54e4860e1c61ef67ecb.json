{"ast":null,"code":"import React,{useState}from'react';import EventModal from'./CalendarDetail';// EventModal 가져오기\nimport{handlePrevMonth,handleNextMonth}from'./othermonth';import useEventManager from'./EventManager';// EventManager 가져오기\nimport'../css/Calendar.css';import'../css/EventManager.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Calendar=_ref=>{let{isOpen,onClose,onDateSelect}=_ref;const[isPopupOpen,setIsPopupOpen]=useState(false);const[year,setYear]=useState(new Date().getFullYear());const[month,setMonth]=useState(new Date().getMonth());const[selectedDate,setSelectedDate]=useState(null);// 선택된 날짜 상태 추가\nconst{events,addEvent,deleteEvent,editEvent}=useEventManager();// useEventManager 훅 사용\n// 현재 날짜를 얻는 함수\nconst currentDate=new Date();const currentYear=currentDate.getFullYear();const currentMonth=currentDate.getMonth()+1;const currentDay=currentDate.getDate();const prevMonth=()=>{handlePrevMonth(month,year,setMonth,setYear);};const nextMonth=()=>{handleNextMonth(month,year,setMonth,setYear);};const eventsIndicator=dateKey=>{if(!events[dateKey])return null;return/*#__PURE__*/_jsx(\"div\",{className:\"events-indicator\",children:events[dateKey].map((event,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"event events-preview\",children:event},index))});};const renderCalendar=()=>{const calendar=[];const firstDay=new Date(year,month,1).getDay();const daysInMonth=new Date(year,month+1,0).getDate();const prevMonthLastDay=new Date(year,month,0).getDate();const monthNames=['1','2','3','4','5','6','7','8','9','10','11','12'];const weekDays=['일','월','화','수','목','금','토'];calendar.push(/*#__PURE__*/_jsx(\"div\",{className:\"monthYear\",children:\"\".concat(year,\"\\uB144 \").concat(monthNames[month],\"\\uC6D4\")},\"monthYear\"));calendar.push(/*#__PURE__*/_jsx(\"div\",{className:\"weekDays\",children:weekDays.map((day,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"day\",children:day},index))},\"weekDays\"));let dateRow=[];const prevMonthDaysToShow=firstDay;for(let i=prevMonthLastDay-prevMonthDaysToShow+1;i<=prevMonthLastDay;i++){dateRow.push(/*#__PURE__*/_jsxs(\"div\",{className:\"date prev-month\",children:[month,\"\\uC6D4\",i,\"\\uC77C\"]},\"prevMonth-\".concat(i)));}for(let date=1;date<=daysInMonth;date++){const dateKey=\"\".concat(year,\"-\").concat(month+1,\"-\").concat(date);const isCurrentDate=year===currentYear&&month+1===currentMonth&&date===currentDay;dateRow.push(/*#__PURE__*/_jsxs(\"div\",{className:\"date \".concat(isCurrentDate?'current-date':''),\"data-date\":date,onClick:()=>{onDateSelect(dateKey);// setSelectedDate(`${year}년 ${month+1}월 ${date}일`)\nsetSelectedDate(dateKey);},children:[date,\"\\uC77C\"]},date));if(dateRow.length===7){calendar.push(/*#__PURE__*/_jsx(\"div\",{className:\"dateRow\",children:dateRow},\"row-\".concat(date)));dateRow=[];}}if(dateRow.length>0){const remainingCells=7-dateRow.length;for(let i=1;i<=remainingCells;i++){const dateKey=\"\".concat(year,\"-\").concat(month+2,\"-\").concat(i);dateRow.push(/*#__PURE__*/_jsxs(\"div\",{className:\"date next-month\",children:[month+2,\"\\uC6D4\",i,\"\\uC77C\"]},\"nextMonth-\".concat(i)));}calendar.push(/*#__PURE__*/_jsx(\"div\",{className:\"dateRow\",children:dateRow},\"lastRow\"));}return calendar;};if(!isOpen)return null;return/*#__PURE__*/_jsx(\"div\",{className:\"popup-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"popup-content\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"close-btn\",onClick:onClose,children:\"\\xD7\"}),/*#__PURE__*/_jsx(\"button\",{onClick:prevMonth,children:\"Prev\"}),/*#__PURE__*/_jsx(\"button\",{onClick:nextMonth,children:\"Next\"}),/*#__PURE__*/_jsx(\"div\",{id:\"calendar\",className:\"calendar\",children:renderCalendar()}),selectedDate!=null&&/*#__PURE__*/_jsx(EventModal,{date:selectedDate,events:events[selectedDate]||[],addEvent:addEvent,deleteEvent:deleteEvent,editEvent:editEvent,onClose:()=>setSelectedDate(null)})]})});};export default Calendar;","map":{"version":3,"names":["React","useState","EventModal","handlePrevMonth","handleNextMonth","useEventManager","jsx","_jsx","jsxs","_jsxs","Calendar","_ref","isOpen","onClose","onDateSelect","isPopupOpen","setIsPopupOpen","year","setYear","Date","getFullYear","month","setMonth","getMonth","selectedDate","setSelectedDate","events","addEvent","deleteEvent","editEvent","currentDate","currentYear","currentMonth","currentDay","getDate","prevMonth","nextMonth","eventsIndicator","dateKey","className","children","map","event","index","renderCalendar","calendar","firstDay","getDay","daysInMonth","prevMonthLastDay","monthNames","weekDays","push","concat","day","dateRow","prevMonthDaysToShow","i","date","isCurrentDate","onClick","length","remainingCells","id"],"sources":["/Users/orcor/react/careplus/src/resource/calendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport EventModal from './CalendarDetail'; // EventModal 가져오기\nimport { handlePrevMonth, handleNextMonth } from './othermonth';\nimport useEventManager from './EventManager'; // EventManager 가져오기\nimport '../css/Calendar.css';\nimport '../css/EventManager.css'\n\nconst Calendar = ({ isOpen, onClose, onDateSelect}) => {\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  const [year, setYear] = useState(new Date().getFullYear());\n  const [month, setMonth] = useState(new Date().getMonth());\n  const [selectedDate, setSelectedDate] = useState(null); // 선택된 날짜 상태 추가\n  const { events, addEvent, deleteEvent, editEvent } = useEventManager(); // useEventManager 훅 사용\n\n\n  // 현재 날짜를 얻는 함수\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const currentMonth = currentDate.getMonth()+1;\n  const currentDay = currentDate.getDate();\n\n  const prevMonth = () => {\n    handlePrevMonth(month, year, setMonth, setYear);\n  };\n\n  const nextMonth = () => {\n    handleNextMonth(month, year, setMonth, setYear);\n  };\n\n  const eventsIndicator = (dateKey) => {\n    if (!events[dateKey]) return null;\n    return (\n      <div className=\"events-indicator\">\n        {events[dateKey].map((event, index) => (\n          <div key={index} className=\"event events-preview\">\n            {event}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const renderCalendar = () => {\n    const calendar = [];\n    const firstDay = new Date(year, month, 1).getDay();\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\n    const prevMonthLastDay = new Date(year, month, 0).getDate();\n\n    const monthNames = [\n      '1', '2', '3', '4', '5', '6',\n      '7', '8', '9', '10', '11', '12'\n    ];\n    const weekDays = ['일', '월', '화', '수', '목', '금', '토'];\n\n    calendar.push(<div key=\"monthYear\" className=\"monthYear\">{`${year}년 ${monthNames[month]}월`}</div>);\n\n    calendar.push(\n      <div key=\"weekDays\" className=\"weekDays\">\n        {weekDays.map((day, index) => <div key={index} className=\"day\">{day}</div>)}\n      </div>\n    );\n\n    let dateRow = [];\n\n    const prevMonthDaysToShow = firstDay;\n    for (let i = prevMonthLastDay - prevMonthDaysToShow + 1; i <= prevMonthLastDay; i++) {\n      dateRow.push(\n        <div key={`prevMonth-${i}`} className=\"date prev-month\" >\n          {month}월{i}일\n        </div>\n      );\n    }\n\n    for (let date = 1; date <= daysInMonth; date++) {\n      const dateKey = `${year}-${month + 1}-${date}`;\n            const isCurrentDate = year === currentYear && month + 1 === currentMonth && date === currentDay;\n\n      dateRow.push(\n        <div key={date} className={`date ${isCurrentDate ? 'current-date' : ''}`} data-date={date} onClick={() => {\n            onDateSelect(dateKey)\n            // setSelectedDate(`${year}년 ${month+1}월 ${date}일`)\n            setSelectedDate(dateKey)\n            }}>\n          {date}일\n         \n        </div>\n      );\n      if (dateRow.length === 7) {\n        calendar.push(<div key={`row-${date}`} className=\"dateRow\">{dateRow}</div>);\n        dateRow = [];\n      }\n    }\n\n    if (dateRow.length > 0) {\n      const remainingCells = 7 - dateRow.length;\n      for (let i = 1; i <= remainingCells; i++) {\n        const dateKey = `${year}-${month + 2}-${i}`;\n        dateRow.push(\n          <div key={`nextMonth-${i}`} className=\"date next-month\">\n            {month+2}월{i}일\n          </div>\n        );\n      }\n      calendar.push(<div key=\"lastRow\" className=\"dateRow\">{dateRow}</div>);\n    }\n\n    return calendar;\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"popup-overlay\">\n      <div className=\"popup-content\">\n        <button className=\"close-btn\" onClick={onClose}>&times;</button>\n        <button onClick={prevMonth}>Prev</button>\n        <button onClick={nextMonth}>Next</button>\n        <div id=\"calendar\" className=\"calendar\">\n          {renderCalendar()}\n        </div>\n        {/* 모달을 선택된 날짜에 대해 열도록 설정 */}\n        {selectedDate!=null && (\n          <EventModal\n            date={selectedDate}\n            events={events[selectedDate] || []}\n            addEvent={addEvent}\n            deleteEvent={deleteEvent}\n            editEvent={editEvent}\n            onClose={() => setSelectedDate(null)}\n          />\n        )}\n      </div>\n     \n    </div>\n  );\n};\n\nexport default Calendar;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CAAE;AAC3C,OAASC,eAAe,CAAEC,eAAe,KAAQ,cAAc,CAC/D,MAAO,CAAAC,eAAe,KAAM,gBAAgB,CAAE;AAC9C,MAAO,qBAAqB,CAC5B,MAAO,yBAAyB,QAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhC,KAAM,CAAAC,QAAQ,CAAGC,IAAA,EAAsC,IAArC,CAAEC,MAAM,CAAEC,OAAO,CAAEC,YAAY,CAAC,CAAAH,IAAA,CAChD,KAAM,CAACI,WAAW,CAAEC,cAAc,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAErD,KAAM,CAACgB,IAAI,CAAEC,OAAO,CAAC,CAAGjB,QAAQ,CAAC,GAAI,CAAAkB,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAC1D,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGrB,QAAQ,CAAC,GAAI,CAAAkB,IAAI,CAAC,CAAC,CAACI,QAAQ,CAAC,CAAC,CAAC,CACzD,KAAM,CAACC,YAAY,CAAEC,eAAe,CAAC,CAAGxB,QAAQ,CAAC,IAAI,CAAC,CAAE;AACxD,KAAM,CAAEyB,MAAM,CAAEC,QAAQ,CAAEC,WAAW,CAAEC,SAAU,CAAC,CAAGxB,eAAe,CAAC,CAAC,CAAE;AAGxE;AACA,KAAM,CAAAyB,WAAW,CAAG,GAAI,CAAAX,IAAI,CAAC,CAAC,CAC9B,KAAM,CAAAY,WAAW,CAAGD,WAAW,CAACV,WAAW,CAAC,CAAC,CAC7C,KAAM,CAAAY,YAAY,CAAGF,WAAW,CAACP,QAAQ,CAAC,CAAC,CAAC,CAAC,CAC7C,KAAM,CAAAU,UAAU,CAAGH,WAAW,CAACI,OAAO,CAAC,CAAC,CAExC,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtBhC,eAAe,CAACkB,KAAK,CAAEJ,IAAI,CAAEK,QAAQ,CAAEJ,OAAO,CAAC,CACjD,CAAC,CAED,KAAM,CAAAkB,SAAS,CAAGA,CAAA,GAAM,CACtBhC,eAAe,CAACiB,KAAK,CAAEJ,IAAI,CAAEK,QAAQ,CAAEJ,OAAO,CAAC,CACjD,CAAC,CAED,KAAM,CAAAmB,eAAe,CAAIC,OAAO,EAAK,CACnC,GAAI,CAACZ,MAAM,CAACY,OAAO,CAAC,CAAE,MAAO,KAAI,CACjC,mBACE/B,IAAA,QAAKgC,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC9Bd,MAAM,CAACY,OAAO,CAAC,CAACG,GAAG,CAAC,CAACC,KAAK,CAAEC,KAAK,gBAChCpC,IAAA,QAAiBgC,SAAS,CAAC,sBAAsB,CAAAC,QAAA,CAC9CE,KAAK,EADEC,KAEL,CACN,CAAC,CACC,CAAC,CAEV,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,QAAQ,CAAG,EAAE,CACnB,KAAM,CAAAC,QAAQ,CAAG,GAAI,CAAA3B,IAAI,CAACF,IAAI,CAAEI,KAAK,CAAE,CAAC,CAAC,CAAC0B,MAAM,CAAC,CAAC,CAClD,KAAM,CAAAC,WAAW,CAAG,GAAI,CAAA7B,IAAI,CAACF,IAAI,CAAEI,KAAK,CAAG,CAAC,CAAE,CAAC,CAAC,CAACa,OAAO,CAAC,CAAC,CAC1D,KAAM,CAAAe,gBAAgB,CAAG,GAAI,CAAA9B,IAAI,CAACF,IAAI,CAAEI,KAAK,CAAE,CAAC,CAAC,CAACa,OAAO,CAAC,CAAC,CAE3D,KAAM,CAAAgB,UAAU,CAAG,CACjB,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAC5B,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,IAAI,CAAE,IAAI,CAAE,IAAI,CAChC,CACD,KAAM,CAAAC,QAAQ,CAAG,CAAC,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAE,GAAG,CAAC,CAEpDN,QAAQ,CAACO,IAAI,cAAC7C,IAAA,QAAqBgC,SAAS,CAAC,WAAW,CAAAC,QAAA,IAAAa,MAAA,CAAKpC,IAAI,YAAAoC,MAAA,CAAKH,UAAU,CAAC7B,KAAK,CAAC,YAAhE,WAAyE,CAAC,CAAC,CAElGwB,QAAQ,CAACO,IAAI,cACX7C,IAAA,QAAoBgC,SAAS,CAAC,UAAU,CAAAC,QAAA,CACrCW,QAAQ,CAACV,GAAG,CAAC,CAACa,GAAG,CAAEX,KAAK,gBAAKpC,IAAA,QAAiBgC,SAAS,CAAC,KAAK,CAAAC,QAAA,CAAEc,GAAG,EAA3BX,KAAiC,CAAC,CAAC,EADpE,UAEJ,CACP,CAAC,CAED,GAAI,CAAAY,OAAO,CAAG,EAAE,CAEhB,KAAM,CAAAC,mBAAmB,CAAGV,QAAQ,CACpC,IAAK,GAAI,CAAAW,CAAC,CAAGR,gBAAgB,CAAGO,mBAAmB,CAAG,CAAC,CAAEC,CAAC,EAAIR,gBAAgB,CAAEQ,CAAC,EAAE,CAAE,CACnFF,OAAO,CAACH,IAAI,cACV3C,KAAA,QAA4B8B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,EACpDnB,KAAK,CAAC,QAAC,CAACoC,CAAC,CAAC,QACb,gBAAAJ,MAAA,CAFuBI,CAAC,CAEnB,CACP,CAAC,CACH,CAEA,IAAK,GAAI,CAAAC,IAAI,CAAG,CAAC,CAAEA,IAAI,EAAIV,WAAW,CAAEU,IAAI,EAAE,CAAE,CAC9C,KAAM,CAAApB,OAAO,IAAAe,MAAA,CAAMpC,IAAI,MAAAoC,MAAA,CAAIhC,KAAK,CAAG,CAAC,MAAAgC,MAAA,CAAIK,IAAI,CAAE,CACxC,KAAM,CAAAC,aAAa,CAAG1C,IAAI,GAAKc,WAAW,EAAIV,KAAK,CAAG,CAAC,GAAKW,YAAY,EAAI0B,IAAI,GAAKzB,UAAU,CAErGsB,OAAO,CAACH,IAAI,cACV3C,KAAA,QAAgB8B,SAAS,SAAAc,MAAA,CAAUM,aAAa,CAAG,cAAc,CAAG,EAAE,CAAG,CAAC,YAAWD,IAAK,CAACE,OAAO,CAAEA,CAAA,GAAM,CACtG9C,YAAY,CAACwB,OAAO,CAAC,CACrB;AACAb,eAAe,CAACa,OAAO,CAAC,CACxB,CAAE,CAAAE,QAAA,EACHkB,IAAI,CAAC,QAER,GAPUA,IAOL,CACP,CAAC,CACD,GAAIH,OAAO,CAACM,MAAM,GAAK,CAAC,CAAE,CACxBhB,QAAQ,CAACO,IAAI,cAAC7C,IAAA,QAAyBgC,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAEe,OAAO,SAAAF,MAAA,CAApCK,IAAI,CAAsC,CAAC,CAAC,CAC3EH,OAAO,CAAG,EAAE,CACd,CACF,CAEA,GAAIA,OAAO,CAACM,MAAM,CAAG,CAAC,CAAE,CACtB,KAAM,CAAAC,cAAc,CAAG,CAAC,CAAGP,OAAO,CAACM,MAAM,CACzC,IAAK,GAAI,CAAAJ,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAIK,cAAc,CAAEL,CAAC,EAAE,CAAE,CACxC,KAAM,CAAAnB,OAAO,IAAAe,MAAA,CAAMpC,IAAI,MAAAoC,MAAA,CAAIhC,KAAK,CAAG,CAAC,MAAAgC,MAAA,CAAII,CAAC,CAAE,CAC3CF,OAAO,CAACH,IAAI,cACV3C,KAAA,QAA4B8B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,EACpDnB,KAAK,CAAC,CAAC,CAAC,QAAC,CAACoC,CAAC,CAAC,QACf,gBAAAJ,MAAA,CAFuBI,CAAC,CAEnB,CACP,CAAC,CACH,CACAZ,QAAQ,CAACO,IAAI,cAAC7C,IAAA,QAAmBgC,SAAS,CAAC,SAAS,CAAAC,QAAA,CAAEe,OAAO,EAAtC,SAA4C,CAAC,CAAC,CACvE,CAEA,MAAO,CAAAV,QAAQ,CACjB,CAAC,CAED,GAAI,CAACjC,MAAM,CAAE,MAAO,KAAI,CAExB,mBACEL,IAAA,QAAKgC,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC5B/B,KAAA,QAAK8B,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BjC,IAAA,WAAQgC,SAAS,CAAC,WAAW,CAACqB,OAAO,CAAE/C,OAAQ,CAAA2B,QAAA,CAAC,MAAO,CAAQ,CAAC,cAChEjC,IAAA,WAAQqD,OAAO,CAAEzB,SAAU,CAAAK,QAAA,CAAC,MAAI,CAAQ,CAAC,cACzCjC,IAAA,WAAQqD,OAAO,CAAExB,SAAU,CAAAI,QAAA,CAAC,MAAI,CAAQ,CAAC,cACzCjC,IAAA,QAAKwD,EAAE,CAAC,UAAU,CAACxB,SAAS,CAAC,UAAU,CAAAC,QAAA,CACpCI,cAAc,CAAC,CAAC,CACd,CAAC,CAELpB,YAAY,EAAE,IAAI,eACjBjB,IAAA,CAACL,UAAU,EACTwD,IAAI,CAAElC,YAAa,CACnBE,MAAM,CAAEA,MAAM,CAACF,YAAY,CAAC,EAAI,EAAG,CACnCG,QAAQ,CAAEA,QAAS,CACnBC,WAAW,CAAEA,WAAY,CACzBC,SAAS,CAAEA,SAAU,CACrBhB,OAAO,CAAEA,CAAA,GAAMY,eAAe,CAAC,IAAI,CAAE,CACtC,CACF,EACE,CAAC,CAEH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAf,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}