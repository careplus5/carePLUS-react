{"ast":null,"code":"var _s = $RefreshSig$();\nimport './css/App.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Header from './resource/Header';\nimport NurPatientList from './resource/NurPatientList';\nimport Sidebar from './resource/Sidebar';\nimport Login from './resource/Login';\nimport { RecoilRoot } from 'recoil';\nimport React, { useState } from 'react';\nimport { Routes, Route, useNavigate } from 'react-router-dom';\nimport Common from './resource/Common';\nimport OpenCalendar from './resource/OpenCalendar';\nimport { usernameAtom } from './config/Atom';\nimport { useAtom } from 'jotai';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const navigate = useNavigate();\n  const [loggedInUsername, setLoggedInUsername] = useState('');\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const username = useAtom(usernameAtom);\n  const handleLoginSuccess = () => {\n    if (username) {\n      setIsLoggedIn(true);\n      navigate(\"/organ\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  //     <RecoilRoot>\n\n  //       {/* <Routes>\n  //         <Route path=\"/\" element={<Login onLoginSuccess={handleLoginSuccess}/>}/>\n  //         <Route \n  //           path=\"/*\" \n  //           element={\n  //             <Common loggedInUsername={loggedInUsername}/>}/>\n  //       </Routes>\n  //       {/* <div className={isLoggedIn === true ? 'inCarePlus':'outCarePlus'}>\n  //         <Header loggedInUsername={loggedInUsername}/>\n  //         <Sidebar/>\n  //       </d\n  //       iv> */}\n\n  //  <Routes>\n  //  <Route path=\"/login\" element={<Login onLoginSuccess={handleLoginSuccess}/>}/>\n  // <Route path=\"/*\" element={ <Common loggedInUsername={loggedInUsername}/>}/>\n  //                   </Routes>\n\n  // </RecoilRoot>\n  ;\n}\n_s(App, \"e6htMB5K1U3NKzEhQAQGr3k85jA=\", false, function () {\n  return [useNavigate, useAtom];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","NurPatientList","Sidebar","Login","RecoilRoot","React","useState","Routes","Route","useNavigate","Common","OpenCalendar","usernameAtom","useAtom","Fragment","_Fragment","jsxDEV","_jsxDEV","App","_s","navigate","loggedInUsername","setLoggedInUsername","isLoggedIn","setIsLoggedIn","username","handleLoginSuccess","_c","$RefreshReg$"],"sources":["/Users/orcor/react/careplus/src/App.js"],"sourcesContent":["import './css/App.css';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport Header from './resource/Header';\nimport NurPatientList from './resource/NurPatientList';\nimport Sidebar from './resource/Sidebar';\nimport Login from './resource/Login';\nimport { RecoilRoot } from 'recoil';\nimport React, {useState} from 'react';\nimport {Routes, Route, useNavigate} from 'react-router-dom';\nimport Common from './resource/Common';\nimport OpenCalendar from './resource/OpenCalendar';\nimport { usernameAtom } from './config/Atom';\nimport { useAtom } from 'jotai';\n\n\nfunction App() {\nconst navigate = useNavigate();\nconst [loggedInUsername, setLoggedInUsername] = useState('');\nconst [isLoggedIn, setIsLoggedIn] = useState(false);\nconst username = useAtom(usernameAtom);\n\n const handleLoginSuccess = () => {\n  if(username){\n    setIsLoggedIn(true);\n    navigate(\"/organ\");\n  }\n \n }\n  \n  return(<></>\n//     <RecoilRoot>\n\n//       {/* <Routes>\n//         <Route path=\"/\" element={<Login onLoginSuccess={handleLoginSuccess}/>}/>\n//         <Route \n//           path=\"/*\" \n//           element={\n//             <Common loggedInUsername={loggedInUsername}/>}/>\n//       </Routes>\n//       {/* <div className={isLoggedIn === true ? 'inCarePlus':'outCarePlus'}>\n//         <Header loggedInUsername={loggedInUsername}/>\n//         <Sidebar/>\n//       </d\n//       iv> */}\n     \n//  <Routes>\n//  <Route path=\"/login\" element={<Login onLoginSuccess={handleLoginSuccess}/>}/>\n// <Route path=\"/*\" element={ <Common loggedInUsername={loggedInUsername}/>}/>\n//                   </Routes>\n\n// </RecoilRoot>\n );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,eAAe;AACtB,OAAO,kCAAkC;AACzC,OAAOA,MAAM,MAAM,mBAAmB;AACtC,OAAOC,cAAc,MAAM,2BAA2B;AACtD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,kBAAkB;AACpC,SAASC,UAAU,QAAQ,QAAQ;AACnC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAAQC,MAAM,EAAEC,KAAK,EAAEC,WAAW,QAAO,kBAAkB;AAC3D,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,YAAY,MAAM,yBAAyB;AAClD,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,OAAO,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAGhC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACY,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAMmB,QAAQ,GAAGZ,OAAO,CAACD,YAAY,CAAC;EAErC,MAAMc,kBAAkB,GAAGA,CAAA,KAAM;IAChC,IAAGD,QAAQ,EAAC;MACVD,aAAa,CAAC,IAAI,CAAC;MACnBJ,QAAQ,CAAC,QAAQ,CAAC;IACpB;EAED,CAAC;EAEA,oBAAOH,OAAA,CAAAF,SAAA,mBAAI;EACb;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EAAA;AAEA;AAACI,EAAA,CArCQD,GAAG;EAAA,QACKT,WAAW,EAGXI,OAAO;AAAA;AAAAc,EAAA,GAJfT,GAAG;AAuCZ,eAAeA,GAAG;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}