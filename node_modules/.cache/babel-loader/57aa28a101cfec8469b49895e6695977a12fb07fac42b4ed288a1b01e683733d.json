{"ast":null,"code":"import'../css/Login.css';import'../css/App.css';import{useState,useEffect}from'react';import axios from\"axios\";import{url}from'../config';import{useDispatch}from'react-redux';import{useNavigate}from'react-router-dom';import storage from'redux-persist/lib/storage';import store from'../store';// 401 에러 해결하기\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Login=()=>{// 로그인하려는 직원, 아이디와 비밀번호\nconst[user,setUser]=useState({id:'',password:''});// redux에서 상태를 변경하기 위해 액션을 스토어에 전달하는 함수\n// 액션을 스토어에 보내고, 그 결과로 상태가 업데이트됨\nconst dispatch=useDispatch();const navigate=useNavigate();const changeValue=e=>{setUser({...user,[e.target.name]:e.target.value});};const submit=e=>{e.preventDefault();const trimmedUser={id:user.id.trim(),password:user.password.trim()};console.log(trimmedUser.id);console.log(trimmedUser.password);const token=localStorage.getItem('token');axios.post(\"\".concat(url,\"/login\"),user).then(res=>{console.log(res.data);dispatch({type:'user',payload:res.data});navigate(\"/\");//DTO 에서 파라미터 값을 받아서 넣어줌\n// console.log(res);\n// sessionStorage.setItem(\"user\", JSON.stringify(res.data));\n// 세션은 문자열로 받아서 넣어아 하기 때문에 JSON.형태로\nconsole.log(res);alert(\"로그인 성공!\");}).catch(err=>{console.log(err);console.log(token);});};return/*#__PURE__*/_jsx(\"div\",{className:\"loginBody\",children:/*#__PURE__*/_jsx(\"div\",{className:\"loginMain\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"loginBox\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"loginBoxTop\",children:/*#__PURE__*/_jsxs(\"a\",{href:\"http://naver.com\",children:[\" \",/*#__PURE__*/_jsx(\"img\",{id:\"loginLogoImg\",src:\"img/logo2.png\"}),\" \"]})}),/*#__PURE__*/_jsx(\"div\",{id:\"leftEmpty\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"rightLogin\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginId\",children:[\"ID \\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"id\",id:\"id\",onChange:changeValue})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginPw\",children:[\"PW \\xA0\",/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",id:\"password\",onChange:changeValue})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginButton\",children:[/*#__PURE__*/_jsx(\"button\",{id:\"rePw\",children:\"PW \\uC7AC\\uC124\\uC815\"}),\" \\xA0\",/*#__PURE__*/_jsx(\"button\",{id:\"loginSuccess\",onClick:submit,children:\"\\uB85C\\uADF8\\uC778\"})]})]})]})})});};export default Login;","map":{"version":3,"names":["useState","useEffect","axios","url","useDispatch","useNavigate","storage","store","jsx","_jsx","jsxs","_jsxs","Login","user","setUser","id","password","dispatch","navigate","changeValue","e","target","name","value","submit","preventDefault","trimmedUser","trim","console","log","token","localStorage","getItem","post","concat","then","res","data","type","payload","alert","catch","err","className","children","href","src","onChange","onClick"],"sources":["/Users/orcor/react/careplus/src/resource/Login.js"],"sourcesContent":["import '../css/Login.css';\nimport '../css/App.css';\nimport {useState, useEffect} from 'react';\nimport axios from \"axios\";\nimport {url} from '../config'\nimport {useDispatch} from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport storage from 'redux-persist/lib/storage';\nimport store from '../store';\n\n// 401 에러 해결하기\nconst Login = () => {\n    // 로그인하려는 직원, 아이디와 비밀번호\n    const [user, setUser] = useState({ id:'', password:''});\n    \n\n    // redux에서 상태를 변경하기 위해 액션을 스토어에 전달하는 함수\n    // 액션을 스토어에 보내고, 그 결과로 상태가 업데이트됨\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const changeValue = (e) => {\n        setUser({...user, [e.target.name]:e.target.value})\n    }\n    const submit = (e) => {\n        e.preventDefault();\n        const trimmedUser = {\n            id:user.id.trim(),\n            password:user.password.trim()  \n        };\n        console.log(trimmedUser.id);\n        console.log(trimmedUser.password);\n        const token = localStorage.getItem('token');\n\n\n        axios.post(`${url}/login`,user)\n            .then(res => {\n                console.log(res.data);\n                dispatch({type:'user',payload:res.data})\n                navigate(\"/\");\n                //DTO 에서 파라미터 값을 받아서 넣어줌\n               // console.log(res);\n                // sessionStorage.setItem(\"user\", JSON.stringify(res.data));\n                // 세션은 문자열로 받아서 넣어아 하기 때문에 JSON.형태로\n               \n                console.log(res);\n                alert(\"로그인 성공!\");\n            })\n            .catch(err => {\n                console.log(err);\n                console.log(token);\n            })\n    }\n\n\n    return(\n    <div className=\"loginBody\">\n        <div className=\"loginMain\">\n            <div className=\"loginBox\">\n                <div className=\"loginBoxTop\">\n                   <a href=\"http://naver.com\"> <img id=\"loginLogoImg\" src=\"img/logo2.png\"/> </a>\n                </div>\n                <div id=\"leftEmpty\">\n                </div>\n                <div className=\"rightLogin\">\n                    <br/><br/><br/><br/><br/><br/>\n                    <div className=\"loginId\">\n                        ID &nbsp;\n                        <input type=\"text\" name=\"id\" id=\"id\" onChange={changeValue}/>\n                        </div>\n                        <br/>\n                        <div className=\"loginPw\">\n                            PW &nbsp;\n                            <input type=\"password\" name=\"password\" id=\"password\" onChange={changeValue}/>\n                    </div>\n                    <div className=\"loginButton\">\n                        <button id=\"rePw\">PW 재설정</button> &nbsp;\n                        <button id=\"loginSuccess\" onClick={submit} >로그인</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n}\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}