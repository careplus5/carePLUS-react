{"ast":null,"code":"var _jsxFileName = \"/Users/orcor/react/careplus/src/resource/CalendarDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../css/EventManager.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventModal = ({\n  date,\n  events,\n  addEvent,\n  deleteEvent,\n  editEvent,\n  onClose\n}) => {\n  _s();\n  const [newEvent, setNewEvent] = useState('');\n  const [eventList, setEventList] = useState([]);\n  useEffect(() => {\n    setEventList([...events]);\n    // events 객체에서 특정 날짜에 해당하는 이벤트 배열을 가져옴\n    // setEventList(events[date] || []);\n    // if (events && events[date]) {\n    //   setEventList(events[date]);\n    // } else {\n    //   setEventList([]);\n    // }\n  }, [date, events]);\n  const handleAddEvent = () => {\n    if (newEvent.trim() !== '') {\n      addEvent(date, newEvent); // EventManager에서 함수 직접 호출\n      setNewEvent('');\n    } else {\n      console.error(\"새 이벤트 내용이 비어 있습니다.\");\n    }\n  };\n  const handleEditEvent = index => {\n    const editedEvent = prompt(\"일정 수정: \", events[date][index]);\n    if (editedEvent !== null) {\n      editEvent(date, index, editedEvent);\n    } // EventManager에서 함수 직접 호출\n  };\n  const handleDeleteEvent = index => {\n    deleteEvent(date, index); // EventManager에서 함수 직접 호출\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"eventpopup-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"eventpopup-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"close-btn\",\n        onClick: onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: eventList.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: event\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEditEvent(index, prompt(\"Edit event:\", event)),\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteEvent(index),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newEvent,\n        onChange: e => setNewEvent(e.target.value),\n        placeholder: \"\\uC0C8 \\uC774\\uBCA4\\uD2B8 \\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddEvent,\n        children: \"\\uCD94\\uAC00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(EventModal, \"0Zz4IRmAQIt7gxAKdgWQkwkn37I=\");\n_c = EventModal;\nexport default EventModal;\nvar _c;\n$RefreshReg$(_c, \"EventModal\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","EventModal","date","events","addEvent","deleteEvent","editEvent","onClose","_s","newEvent","setNewEvent","eventList","setEventList","handleAddEvent","trim","console","error","handleEditEvent","index","editedEvent","prompt","handleDeleteEvent","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","event","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/orcor/react/careplus/src/resource/CalendarDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../css/EventManager.css';\n\nconst EventModal = ({ date, events, addEvent, deleteEvent, editEvent, onClose }) => {\n  const [newEvent, setNewEvent] = useState('');\n  const [eventList, setEventList] = useState([]);\n  useEffect(() => {\n    setEventList([... events]);\n    // events 객체에서 특정 날짜에 해당하는 이벤트 배열을 가져옴\n    // setEventList(events[date] || []);\n    // if (events && events[date]) {\n    //   setEventList(events[date]);\n    // } else {\n    //   setEventList([]);\n    // }\n  }, [date, events]);\n  \n  const handleAddEvent = () => {\n    if (newEvent.trim() !== '') {\n      addEvent(date, newEvent); // EventManager에서 함수 직접 호출\n      setNewEvent('');\n    }else {\n      console.error(\"새 이벤트 내용이 비어 있습니다.\");\n    }\n  };\n\n  \n\n  const handleEditEvent = (index) => {\n    const editedEvent = prompt(\"일정 수정: \", events[date][index]);\n    if (editedEvent !== null) {\n      editEvent(date, index, editedEvent);\n    } // EventManager에서 함수 직접 호출\n  };\n\n  const handleDeleteEvent = (index) => {\n    deleteEvent(date, index); // EventManager에서 함수 직접 호출\n  };\n\n  return (\n    <div className=\"eventpopup-overlay\">\n      <div className=\"eventpopup-content\">\n        <span className=\"close-btn\" onClick={onClose}>&times;</span>\n        <h2>{date}</h2>\n        <ul>\n          {eventList.map((event, index) => (\n            <li key={index}>\n              <span>{event}</span>\n              <button onClick={() => handleEditEvent(index, prompt(\"Edit event:\", event))}>수정</button>\n              <button onClick={() => handleDeleteEvent(index)}>삭제</button>\n            </li>\n          ))}\n        </ul>\n        <input\n          type=\"text\"\n          value={newEvent}\n          onChange={(e) => setNewEvent(e.target.value)}\n          placeholder=\"새 이벤트 추가\"\n        />&nbsp;&nbsp;&nbsp;\n        <button onClick={handleAddEvent}>추가</button>\n      </div>\n    </div>\n  );\n};\n\nexport default EventModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}