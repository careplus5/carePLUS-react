{"ast":null,"code":"var _jsxFileName = \"/Users/orcor/react/careplus/src/resource/Login.js\",\n  _s = $RefreshSig$();\nimport '../css/Login.css';\nimport '../css/App.css';\nimport { useState, useEffect, useContext } from 'react';\nimport axios from \"axios\";\nimport { url } from '../config';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport storage from 'redux-persist/lib/storage';\nimport store from '../store';\nimport UserContext from './UseContext';\n\n// 401 에러 해결하기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = ({\n  onLoginSuccess\n}) => {\n  _s();\n  // 로그인하려는 직원, 아이디와 비밀번호\n  const [emp, setEmp] = useState({\n    username: '',\n    password: ''\n  });\n  const {\n    setUsername\n  } = useContext(UserContext);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  // redux에서 상태를 변경하기 위해 액션을 스토어에 전달하는 함수\n  // 액션을 스토어에 보내고, 그 결과로 상태가 업데이트됨\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState('');\n  const changeValue = e => {\n    setEmp({\n      ...emp,\n      [e.target.name]: e.target.value\n    });\n  };\n  const submit = e => {\n    e.preventDefault();\n    const token = localStorage.getItem('token');\n    // formData => 제일 일반적으로 넘기는 형태 (obtainUsername으로 갖고올때), 기본 default get.parameter!!!\n    // JSON => 컨트롤러로 어노테이션으로 쓸때.\n\n    if (emp.username === '' || emp.password === '') {\n      setErrorMessage(\"아이디와 비밀번호를 모두 입력해 주세요.\");\n      return;\n    }\n    let formData = new FormData();\n    formData.append(\"username\", emp.username);\n    formData.append(\"password\", emp.password);\n    axios.post(`${url}/login`, formData).then(res => {\n      if (res.datausername === emp.username) {\n        console.log(formData.username);\n        dispatch({\n          type: 'emp',\n          payload: res.data\n        });\n        onLoginSuccess(emp.username);\n        setUsername(emp.username);\n        navigate(\"/orgran\");\n      } else {\n        setErrorMessage(\"로그인에 실패했습니다. 다시 시도해 주세요.\");\n      }\n\n      //DTO 에서 파라미터 값을 받아서 넣어줌\n      // console.log(res);\n      // sessionStorage.setItem(\"user\", JSON.stringify(res.data));\n      // 세션은 문자열로 받아서 넣어아 하기 때문에 JSON.형태로\n    }).catch(err => {\n      console.log(err);\n      alert(emp.password);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginBody\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loginMain\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginBox\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginBoxTop\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"http://naver.com\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"loginLogoImg\",\n              src: \"img/logo2.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 48\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 20\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"leftEmpty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rightLogin\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 36\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 46\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginId\",\n            children: [\"ID \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              id: \"id\",\n              onChange: changeValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginPw\",\n            children: [\"PW \\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              id: \"password\",\n              onChange: changeValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loginButton\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"rePw\",\n              children: \"PW \\uC7AC\\uC124\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), \" \\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"loginSuccess\",\n              onClick: submit,\n              children: \"\\uB85C\\uADF8\\uC778\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"GbEoeTTmLKS0v0ZVL/hNJ1s9bec=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","useEffect","useContext","axios","url","useDispatch","useNavigate","storage","store","UserContext","jsxDEV","_jsxDEV","Login","onLoginSuccess","_s","emp","setEmp","username","password","setUsername","isLoggedIn","setIsLoggedIn","dispatch","navigate","errorMessage","setErrorMessage","changeValue","e","target","name","value","submit","preventDefault","token","localStorage","getItem","formData","FormData","append","post","then","res","datausername","console","log","type","payload","data","catch","err","alert","className","children","href","id","src","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/orcor/react/careplus/src/resource/Login.js"],"sourcesContent":["import '../css/Login.css';\nimport '../css/App.css';\nimport {useState, useEffect, useContext} from 'react';\nimport axios from \"axios\";\nimport {url} from '../config'\nimport {useDispatch} from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport storage from 'redux-persist/lib/storage';\nimport store from '../store';\nimport UserContext from './UseContext';\n\n// 401 에러 해결하기\nconst Login = ({ onLoginSuccess }) => {\n    // 로그인하려는 직원, 아이디와 비밀번호\n    const [emp, setEmp] = useState({ username:'', password:''});\n    const {setUsername} = useContext(UserContext);\n    \n    const [isLoggedIn,setIsLoggedIn] = useState(false);\n    // redux에서 상태를 변경하기 위해 액션을 스토어에 전달하는 함수\n    // 액션을 스토어에 보내고, 그 결과로 상태가 업데이트됨\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n    const [errorMessage, setErrorMessage] = useState('');\n    const changeValue = (e) => {\n        setEmp({...emp, [e.target.name]:e.target.value})\n    }\n    const submit = (e) => {\n        e.preventDefault();\n    \n        const token = localStorage.getItem('token');\n                 // formData => 제일 일반적으로 넘기는 형태 (obtainUsername으로 갖고올때), 기본 default get.parameter!!!\n                 // JSON => 컨트롤러로 어노테이션으로 쓸때.\n\n                 if(emp.username === '' || emp.password === ''\n                 ){\n                    setErrorMessage(\"아이디와 비밀번호를 모두 입력해 주세요.\")\n                    return;\n                 }\n        let formData = new FormData();\n        formData.append(\"username\", emp.username);\n        formData.append(\"password\", emp.password);\n        axios.post(`${url}/login`,formData)\n            .then(res => {\n                if(res.datausername === emp.username){\n                    console.log(formData.username);\n                    dispatch({type:'emp',payload:res.data})\n                    onLoginSuccess(emp.username); \n                    setUsername(emp.username);\n                   navigate(\"/orgran\");\n    \n                } else {\n                    setErrorMessage(\"로그인에 실패했습니다. 다시 시도해 주세요.\")\n                }\n                \n\n\n                //DTO 에서 파라미터 값을 받아서 넣어줌\n               // console.log(res);\n                // sessionStorage.setItem(\"user\", JSON.stringify(res.data));\n                // 세션은 문자열로 받아서 넣어아 하기 때문에 JSON.형태로\n               \n               \n            })\n            .catch(err => {\n                console.log(err);\n                alert(emp.password);\n            })\n    }\n\n\n    return(\n    <div className=\"loginBody\">\n        <div className=\"loginMain\">\n            <div className=\"loginBox\">\n                <div className=\"loginBoxTop\">\n                   <a href=\"http://naver.com\"> <img id=\"loginLogoImg\" src=\"img/logo2.png\"/> </a>\n                </div>\n                <div id=\"leftEmpty\">\n                </div>\n                <div className=\"rightLogin\">\n                    <br/><br/><br/><br/><br/><br/>\n                    <div className=\"loginId\">\n                        ID &nbsp;\n                        <input type=\"text\" name=\"username\" id=\"id\" onChange={changeValue}/>\n                        </div>\n                        <br/>\n                        <div className=\"loginPw\">\n                            PW &nbsp;\n                            <input type=\"password\" name=\"password\" id=\"password\" onChange={changeValue}/>\n                    </div>\n                    <div className=\"loginButton\">\n                        <button id=\"rePw\">PW 재설정</button> &nbsp;\n                        <button id=\"loginSuccess\" onClick={submit} >로그인</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n        </div>\n    );\n}\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}